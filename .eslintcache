[{"/home/kenny/git/react-testing-library-project/src/reportWebVitals.js":"1","/home/kenny/git/react-testing-library-project/src/App.js":"2","/home/kenny/git/react-testing-library-project/src/index.js":"3","/home/kenny/git/react-testing-library-project/src/components/PokemonPage.js":"4","/home/kenny/git/react-testing-library-project/src/components/ScorePage.js":"5","/home/kenny/git/react-testing-library-project/src/services/getPokemon.js":"6"},{"size":362,"mtime":1606162660407,"results":"7","hashOfConfig":"8"},{"size":2264,"mtime":1606730772292,"results":"9","hashOfConfig":"8"},{"size":544,"mtime":1606602401754,"results":"10","hashOfConfig":"8"},{"size":4032,"mtime":1606689252035,"results":"11","hashOfConfig":"8"},{"size":980,"mtime":1606659955776,"results":"12","hashOfConfig":"8"},{"size":453,"mtime":1606676016436,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1hgqic4",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/kenny/git/react-testing-library-project/src/reportWebVitals.js",[],"/home/kenny/git/react-testing-library-project/src/App.js",[],"/home/kenny/git/react-testing-library-project/src/index.js",[],"/home/kenny/git/react-testing-library-project/src/components/PokemonPage.js",["27"],"import React, { useEffect, useState, useRef } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { getPokemon } from \"../services/getPokemon\";\nimport ScorePage from \"./ScorePage\";\n\nfunction Pokemon({ pokemonTrainer }) {\n  const [pokemonTrainerObject, setPokemonTrainerObject] = useState(\n    pokemonTrainer\n  );\n  const [pokemonList, setPokemonList] = useState([]);\n  const [value, setValue] = useState(\"\");\n  const [countdown, setCountdown] = useState(60);\n  const pokemonRef = useRef(null);\n  const countDownRef = useRef(null);\n  const isMountedRef = useRef(null)\n\n  useEffect(() => {\n    isMountedRef.current = true\n    async function fetchData() {\n      pokemonRef.current = await getPokemon(pokemonId);\n      if(isMountedRef.current) {\n      setPokemonList((prev) => [\n        ...prev,\n        { name: pokemonRef.current.name, image: pokemonRef.current.image },\n      ]);\n    }\n    }\n    fetchData();\n    return () => isMountedRef.current = false\n  }, []);\n\n  useEffect(() => {\n    isMountedRef.current = true;\n    countDownRef.current = setTimeout(() => {\n      if(isMountedRef.current) { \n      setCountdown(countdown - 1);\n      }\n    }, 1000);\n    if (countdown === 0) {\n      clearTimeout(countDownRef.current);\n      setCountdown(0)\n    }\n    return () => isMountedRef.current = false\n  }, [countdown]);\n\n  const handleChange = (e) => setValue(e.target.value);\n\n  const createRandomPokemonId = () => Math.floor(Math.random() * 151 + 1);\n  const pokemonId = createRandomPokemonId();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    pokemonRef.current = await getPokemon(pokemonId);\n    setPokemonList((prev) => [\n      ...prev,\n      { name: pokemonRef.current.name, image: pokemonRef.current.image },\n    ]);\n    updateScore(value);\n    setValue(\"\");\n  };\n\n  const updateScore = (guessedPokemonName) => {\n    const parsedPokemonName = guessedPokemonName.toLowerCase()\n    if (parsedPokemonName === pokemonList[pokemonList.length - 1].name) {\n      setPokemonTrainerObject((prev) => ({ ...prev, score: prev.score + 10 }));\n    }\n  };\n\n  return (\n    <>\n      {countdown === 0 ? (\n        <ScorePage pokemonTrainer={pokemonTrainerObject} />\n      ) : (\n        <div className=\"screen-wrapper\">\n          <div className=\"pokemon-wrapper\">\n            <div className=\"headline-wrapper\">\n              <h1>\n                NAME: {pokemonTrainerObject.name}\n                <br />\n                SCORE: {pokemonTrainerObject.score}\n                <br />\n                TIME LEFT: {countdown}{\" \"}\n              </h1>\n            </div>\n            {pokemonList[0] ? (\n              <div className=\"img-wrapper\">\n                <img\n                  src={pokemonList[pokemonList.length - 1].image}\n                  alt={pokemonList.name}\n                />\n              </div>\n            ) : null}\n            <form\n              className=\"input-wrapper\"\n              onSubmit={(e) => {\n                handleSubmit(e);\n              }}\n            >\n              <TextField\n                color=\"primary\"\n                id=\"name\"\n                name=\"name\"\n                type=\"text\"\n                variant=\"standard\"\n                placeholder=\"E.g. Charizard\"\n                onChange={handleChange}\n                value={value}\n                autoFocus\n                size=\"medium\"\n                style={{\n                  backgroundColor: \"white\",\n                }}\n                InputProps={{\n                  style: {\n                    color: \"black\",\n                  },\n                }}\n              />\n              <div className=\"button-wrapper\">\n                <Button\n                  color=\"primary\"\n                  variant=\"contained\"\n                  type=\"submit\"\n                  size=\"large\"\n                >\n                  Guess\n                </Button>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default Pokemon;\n","/home/kenny/git/react-testing-library-project/src/components/ScorePage.js",[],"/home/kenny/git/react-testing-library-project/src/services/getPokemon.js",[],{"ruleId":"28","severity":1,"message":"29","line":31,"column":6,"nodeType":"30","endLine":31,"endColumn":8,"suggestions":"31"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'pokemonId'. Either include it or remove the dependency array.","ArrayExpression",["32"],{"desc":"33","fix":"34"},"Update the dependencies array to be: [pokemonId]",{"range":"35","text":"36"},[1027,1029],"[pokemonId]"]